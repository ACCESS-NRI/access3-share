# Copyright ACCESS-NRI and contributors. See the top-level COPYRIGHT file for details.
# SPDX-License-Identifier: Apache-2.0

@PACKAGE_INIT@

if(NOT Access3Share_FIND_QUIETLY)
  message(STATUS "Found Access3Share: ${PACKAGE_PREFIX_DIR}")
endif()

# Available components

# The following components are always available (order is important!)
set(_supported_components timing share nuopc_cap_share cmeps cdeps) 

# Check validity of requested components
foreach(_comp ${Access3Share_FIND_COMPONENTS})
  if (NOT _comp IN_LIST _supported_components)
    set(Access3Share_FOUND False)
    set(Access3Share_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
endforeach()

# Build a list of all the required components, taking into account their dependencies
set(_required_components ${Access3Share_FIND_COMPONENTS})
if(cdeps IN_LIST _required_components)
  list(APPEND _required_components cmeps share nuopc_cap_share)
endif()
if(cmeps IN_LIST _required_components)
  list(APPEND _required_components nuopc_cap_share share timing)
endif()
if(nuopc_cap_share IN_LIST _required_components)
  list(APPEND _required_components share timing)
endif()
if(share IN_LIST _required_components)
  list(APPEND _required_components timing)
endif()

list(REMOVE_DUPLICATES _required_components)


if(NOT Access3Share_FIND_QUIETLY)
  message(STATUS "  - Access3Share Components: ${_required_components}")
endif()

# Include required targets. We do this by looping over the _supported_components
# list because the order in which targets are loaded matters.
foreach(_comp ${_supported_components})
  #if (_comp IN_LIST _required_components)
    message(STATUS "  - Including Access3Share Components: ${_comp}")
    include("${CMAKE_CURRENT_LIST_DIR}/Access3Share${_comp}Targets.cmake")
  #endif()
endforeach()

# Find dependencies of required components
include(CMakeFindDependencyMacro)

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

if (cdeps IN_LIST _required_components)
  find_dependency(FoX)
endif()

find_package(PIO 2.5.3 REQUIRED COMPONENTS C Fortran)
find_package(NetCDF 4.7.3 REQUIRED C Fortran)
find_package(ESMF 8.3.0 MODULE REQUIRED)

list(REMOVE_ITEM CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

check_required_components(_supported_components)
